/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  IncentiveDataProvider,
  IncentiveDataProviderInterface,
} from "../IncentiveDataProvider";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_incentiveController",
        type: "address",
      },
      {
        internalType: "address",
        name: "_masterChef",
        type: "address",
      },
      {
        internalType: "address",
        name: "_multiFeeDistribution",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "getUserIncentive",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "walletBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "staked",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimable",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "allocPoint",
            type: "uint256",
          },
        ],
        internalType: "struct IncentiveDataProvider.UserIncentiveData[]",
        name: "_controllerUserData",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "totalAllocPoint",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rewardsPerSecond",
            type: "uint256",
          },
        ],
        internalType: "struct IncentiveDataProvider.IncentivesData",
        name: "_controllerData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "walletBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "staked",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimable",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "allocPoint",
            type: "uint256",
          },
        ],
        internalType: "struct IncentiveDataProvider.UserIncentiveData[]",
        name: "_chefUserData",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "totalAllocPoint",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rewardsPerSecond",
            type: "uint256",
          },
        ],
        internalType: "struct IncentiveDataProvider.IncentivesData",
        name: "_chefData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "walletBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unlockedBalance",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "unlockTime",
                type: "uint256",
              },
            ],
            internalType: "struct IMultiFeeDistribution.LockedBalance[]",
            name: "earnedBalances",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "unlockTime",
                type: "uint256",
              },
            ],
            internalType: "struct IMultiFeeDistribution.LockedBalance[]",
            name: "lockedBalances",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct IMultiFeeDistribution.RewardData[]",
            name: "rewards",
            type: "tuple[]",
          },
        ],
        internalType: "struct IncentiveDataProvider.UserStakeData",
        name: "_stakeUserData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockedSupply",
            type: "uint256",
          },
        ],
        internalType: "struct IncentiveDataProvider.StakeData",
        name: "_stakeData",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "incentiveController",
    outputs: [
      {
        internalType: "contract IChefIncentivesController",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "masterChef",
    outputs: [
      {
        internalType: "contract IMasterChef",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "multiFeeDistribution",
    outputs: [
      {
        internalType: "contract IMultiFeeDistribution",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001fe538038062001fe5833981016040819052620000349162000094565b600080546001600160a01b039485166001600160a01b031991821617909155600180549385169382169390931790925560028054919093169116179055620000dd565b80516001600160a01b03811681146200008f57600080fd5b919050565b600080600060608486031215620000a9578283fd5b620000b48462000077565b9250620000c46020850162000077565b9150620000d46040850162000077565b90509250925092565b611ef880620000ed6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806321c74e0814610051578063542b3cb81461007f578063575a86b2146100945780635b9fe37f1461009c575b600080fd5b61006461005f3660046117e1565b6100a4565b60405161007696959493929190611d01565b60405180910390f35b6100876106a5565b6040516100769190611cd3565b6100876106b4565b6100876106c3565b60606100ae6115dd565b60606100b86115dd565b6100c06115f7565b6100c861162d565b6100d1876106d2565b90965094506100df87610d6d565b600254604080516372f702f360e01b815290519397509195506000926001600160a01b03909116916372f702f3916004808301926020929190829003018186803b15801561012c57600080fd5b505afa158015610140573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016491906117fd565b6040516370a0823160e01b81529091506001600160a01b038216906370a0823190610193908b90600401611cd3565b60206040518083038186803b1580156101ab57600080fd5b505afa1580156101bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e39190611a6a565b8352600254604051630dd59a7360e31b81526001600160a01b0390911690636eacd39890610215908b90600401611cd3565b60206040518083038186803b15801561022d57600080fd5b505afa158015610241573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102659190611a6a565b6020840152600254604051632f07d61760e11b81526001600160a01b0390911690635e0fac2e9061029a908b90600401611cd3565b60206040518083038186803b1580156102b257600080fd5b505afa1580156102c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ea9190611a6a565b6040808501919091526002549051636f9bcc3b60e11b81526001600160a01b039091169063df37987690610322908b90600401611cd3565b60006040518083038186803b15801561033a57600080fd5b505afa15801561034e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103769190810190611a82565b606085015250600254604051630241d3fb60e11b81526001600160a01b0390911690630483a7f6906103ac908b90600401611cd3565b60006040518083038186803b1580156103c457600080fd5b505afa1580156103d8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104009190810190611ac7565b6080870152505060025460405163dc01f60d60e01b81526001600160a01b03909116915063dc01f60d90610438908b90600401611cd3565b60006040518083038186803b15801561045057600080fd5b505afa158015610464573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261048c9190810190611819565b60a08401526001600160a01b0381168083526040805163313ce56760e01b8152905163313ce56791600480820192602092909190829003018186803b1580156104d457600080fd5b505afa1580156104e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050c9190611b1f565b826040019060ff16908160ff1681525050806001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801561055657600080fd5b505afa15801561056a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261059291908101906118ea565b602080840191909152600254604080516318160ddd60e01b815290516001600160a01b03909216926318160ddd92600480840193829003018186803b1580156105da57600080fd5b505afa1580156105ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106129190611a6a565b60608301526002546040805163ca5c7b9160e01b815290516001600160a01b039092169163ca5c7b9191600480820192602092909190829003018186803b15801561065c57600080fd5b505afa158015610670573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106949190611a6a565b608083015250949693955091939092565b6002546001600160a01b031681565b6001546001600160a01b031681565b6000546001600160a01b031681565b60606106dc6115dd565b60008060009054906101000a90046001600160a01b03166001600160a01b031663081e3eda6040518163ffffffff1660e01b815260040160206040518083038186803b15801561072b57600080fd5b505afa15801561073f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107639190611a6a565b905060008054906101000a90046001600160a01b03166001600160a01b031663eacdaabc6040518163ffffffff1660e01b815260040160206040518083038186803b1580156107b157600080fd5b505afa1580156107c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e99190611a6a565b602080840191909152600054604080516317caf6f160e01b815290516001600160a01b03909216926317caf6f192600480840193829003018186803b15801561083157600080fd5b505afa158015610845573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108699190611a6a565b82528067ffffffffffffffff8111801561088257600080fd5b506040519080825280602002602001820160405280156108bc57816020015b6108a9611668565b8152602001906001900390816108a15790505b50925060005b81811015610d66576108d26116b9565b6108da6115dd565b60008054604051634d05d17560e11b81526001600160a01b0390911690639a0ba2ea9061090b908790600401611e0e565b60206040518083038186803b15801561092357600080fd5b505afa158015610937573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095b91906117fd565b600054604051639a7b5f1160e01b81529192506001600160a01b031690639a7b5f119061098c908490600401611cd3565b60a06040518083038186803b1580156109a457600080fd5b505afa1580156109b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109dc9190611974565b600054604051630f208beb60e01b81529194506001600160a01b031690630f208beb90610a0f9084908c90600401611ce7565b604080518083038186803b158015610a2657600080fd5b505afa158015610a3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5e9190611a48565b915080878581518110610a6d57fe5b6020026020010151600001906001600160a01b031690816001600160a01b031681525050806001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610aca57600080fd5b505afa158015610ade573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b029190611b1f565b878581518110610b0e57fe5b60200260200101516040019060ff16908160ff1681525050806001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015610b5f57600080fd5b505afa158015610b73573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b9b91908101906118ea565b878581518110610ba757fe5b60209081029190910181015101526040516370a0823160e01b81526001600160a01b038216906370a0823190610be1908b90600401611cd3565b60206040518083038186803b158015610bf957600080fd5b505afa158015610c0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c319190611a6a565b878581518110610c3d57fe5b60200260200101516060018181525050508060000151868481518110610c5f57fe5b602002602001015160a00181815250508160000151868481518110610c8057fe5b602002602001015160800181815250508160200151868481518110610ca157fe5b602090810291909101015160e001526060820151604083015142118015610cc85750825115155b15610d0c57600086600001518460200151886020015186604001514203020281610cee57fe5b04905083600001518164e8d4a510000281610d0557fe5b0482019150505b610d408260200151610d3a64e8d4a51000610d348587600001516114b790919063ffffffff16565b90611519565b90611580565b878581518110610d4c57fe5b602090810291909101015160c001525050506001016108c2565b5050915091565b6060610d776115dd565b6001546040805163040f1f6d60e11b815290516000926001600160a01b03169163081e3eda916004808301926020929190829003018186803b158015610dbc57600080fd5b505afa158015610dd0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df49190611a6a565b9050600160009054906101000a90046001600160a01b03166001600160a01b031663eacdaabc6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e4457600080fd5b505afa158015610e58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e7c9190611a6a565b602080840191909152600154604080516317caf6f160e01b815290516001600160a01b03909216926317caf6f192600480840193829003018186803b158015610ec457600080fd5b505afa158015610ed8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610efc9190611a6a565b82528067ffffffffffffffff81118015610f1557600080fd5b50604051908082528060200260200182016040528015610f4f57816020015b610f3c611668565b815260200190600190039081610f345790505b50925060005b81811015610d6657610f656116f1565b610f6d6115dd565b600154604051634d05d17560e11b81526000916001600160a01b031690639a0ba2ea90610f9e908790600401611e0e565b60206040518083038186803b158015610fb657600080fd5b505afa158015610fca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fee91906117fd565b600154604051639a7b5f1160e01b81529192506000916001600160a01b0390911690639a7b5f1190611024908590600401611cd3565b60806040518083038186803b15801561103c57600080fd5b505afa158015611050573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061107491906119e3565b600154604051630f208beb60e01b81529192506000916001600160a01b0390911690630f208beb906110ac9086908e90600401611ce7565b604080518083038186803b1580156110c357600080fd5b505afa1580156110d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110fb9190611a48565b90508289878151811061110a57fe5b6020026020010151600001906001600160a01b031690816001600160a01b031681525050826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561116757600080fd5b505afa15801561117b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119f9190611b1f565b8987815181106111ab57fe5b60200260200101516040019060ff16908160ff1681525050826001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b1580156111fc57600080fd5b505afa158015611210573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261123891908101906118ea565b89878151811061124457fe5b60209081029190910181015101526001546040516370a0823160e01b81526001600160a01b03858116926370a08231926112849290911690600401611cd3565b60206040518083038186803b15801561129c57600080fd5b505afa1580156112b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d49190611a6a565b8987815181106112e057fe5b6020908102919091010151608001526040516370a0823160e01b81526001600160a01b038416906370a082319061131b908d90600401611cd3565b60206040518083038186803b15801561133357600080fd5b505afa158015611347573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061136b9190611a6a565b89878151811061137757fe5b60200260200101516060018181525050505050806000015186848151811061139b57fe5b602002602001015160a001818152505081600001518684815181106113bc57fe5b602002602001015160e001818152505060008260400151905082602001514211801561140057508684815181106113ef57fe5b602002602001015160800151600014155b1561146957600061141e84602001514261158090919063ffffffff16565b8751855160208a01519293506000928402028161143757fe5b04905088868151811061144657fe5b6020026020010151608001518164e8d4a51000028161146157fe5b048301925050505b6114918260200151610d3a64e8d4a51000610d348587600001516114b790919063ffffffff16565b87858151811061149d57fe5b602090810291909101015160c00152505050600101610f55565b6000826114c657506000611513565b828202828482816114d357fe5b04146115105760405162461bcd60e51b8152600401808060200182810382526021815260200180611ea26021913960400191505060405180910390fd5b90505b92915050565b600080821161156f576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b81838161157857fe5b049392505050565b6000828211156115d7576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b604051806040016040528060008152602001600081525090565b6040518060c001604052806000815260200160008152602001600081526020016060815260200160608152602001606081525090565b6040518060a0016040528060006001600160a01b0316815260200160608152602001600060ff16815260200160008152602001600081525090565b60405180610100016040528060006001600160a01b0316815260200160608152602001600060ff16815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518060a001604052806000815260200160008152602001600081526020016000815260200160006001600160a01b031681525090565b604051806080016040528060008152602001600081526020016000815260200160006001600160a01b031681525090565b600082601f830112611732578081fd5b8151602061174761174283611e3b565b611e17565b82815281810190858301604080860288018501891015611765578687fd5b865b8681101561178b576117798a84611799565b85529385019391810191600101611767565b509198975050505050505050565b6000604082840312156117aa578081fd5b6040516040810181811067ffffffffffffffff821117156117c757fe5b604052825181526020928301519281019290925250919050565b6000602082840312156117f2578081fd5b813561151081611e89565b60006020828403121561180e578081fd5b815161151081611e89565b6000602080838503121561182b578182fd5b825167ffffffffffffffff80821115611842578384fd5b818501915085601f830112611855578384fd5b815161186361174282611e3b565b818152848101908486016040808502870188018b1015611881578889fd5b8896505b848710156118db5780828c03121561189b578889fd5b805181810181811088821117156118ae57fe5b825282516118bb81611e89565b815282890151898201528452600196909601959287019290810190611885565b50909998505050505050505050565b6000602082840312156118fb578081fd5b815167ffffffffffffffff80821115611912578283fd5b818401915084601f830112611925578283fd5b81518181111561193157fe5b611944601f8201601f1916602001611e17565b915080825285602082850101111561195a578384fd5b61196b816020840160208601611e59565b50949350505050565b600060a08284031215611985578081fd5b60405160a0810181811067ffffffffffffffff821117156119a257fe5b80604052508251815260208301516020820152604083015160408201526060830151606082015260808301516119d781611e89565b60808201529392505050565b6000608082840312156119f4578081fd5b6040516080810181811067ffffffffffffffff82111715611a1157fe5b80604052508251815260208301516020820152604083015160408201526060830151611a3c81611e89565b60608201529392505050565b600060408284031215611a59578081fd5b611a638383611799565b9392505050565b600060208284031215611a7b578081fd5b5051919050565b60008060408385031215611a94578081fd5b82519150602083015167ffffffffffffffff811115611ab1578182fd5b611abd85828601611722565b9150509250929050565b60008060008060808587031215611adc578182fd5b845193506020850151925060408501519150606085015167ffffffffffffffff811115611b07578182fd5b611b1387828801611722565b91505092959194509250565b600060208284031215611b30578081fd5b815160ff81168114611510578182fd5b6000815180845260208085019450808401835b83811015611b7957611b66878351611c69565b6040969096019590820190600101611b53565b509495945050505050565b6000815180845260208085018081965082840281019150828601855b85811015611c30578284038952815180516001600160a01b031685528581015161010087870181905290611bd682880182611c3d565b915050604080830151611beb82890182611ccc565b5050606082810151908701526080808301519087015260a0808301519087015260c0808301519087015260e09182015191909501529784019790840190600101611ba0565b5091979650505050505050565b60008151808452611c55816020860160208601611e59565b601f01601f19169290920160200192915050565b80518252602090810151910152565b600060018060a01b038251168352602082015160a06020850152611c9f60a0850182611c3d565b905060ff604084015116604085015260608301516060850152608083015160808501528091505092915050565b60ff169052565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6000610100808352611d158184018a611b84565b90506020611d258185018a611c69565b8382036060850152611d378289611b84565b9150611d466080850188611c69565b83820360c085015285518252808601518183015260408087015181840152606087015160c06060850152611d7d60c0850182611b40565b905060808801518482036080860152611d968282611b40565b60a08a8101518783039790910196909652855180825290850195850192508691505b80821015611dea57825180516001600160a01b0316875285015185870152948301949184019160019190910190611db8565b505050505082810360e0840152611e018185611c78565b9998505050505050505050565b90815260200190565b60405181810167ffffffffffffffff81118282101715611e3357fe5b604052919050565b600067ffffffffffffffff821115611e4f57fe5b5060209081020190565b60005b83811015611e74578181015183820152602001611e5c565b83811115611e83576000848401525b50505050565b6001600160a01b0381168114611e9e57600080fd5b5056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220ab6511acc1141fdfe7f9316e5ffeb5f6720e5173d721022fe7cd23ee1cb9a48e64736f6c63430007060033";

export class IncentiveDataProvider__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _incentiveController: string,
    _masterChef: string,
    _multiFeeDistribution: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<IncentiveDataProvider> {
    return super.deploy(
      _incentiveController,
      _masterChef,
      _multiFeeDistribution,
      overrides || {}
    ) as Promise<IncentiveDataProvider>;
  }
  getDeployTransaction(
    _incentiveController: string,
    _masterChef: string,
    _multiFeeDistribution: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _incentiveController,
      _masterChef,
      _multiFeeDistribution,
      overrides || {}
    );
  }
  attach(address: string): IncentiveDataProvider {
    return super.attach(address) as IncentiveDataProvider;
  }
  connect(signer: Signer): IncentiveDataProvider__factory {
    return super.connect(signer) as IncentiveDataProvider__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IncentiveDataProviderInterface {
    return new utils.Interface(_abi) as IncentiveDataProviderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IncentiveDataProvider {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IncentiveDataProvider;
  }
}
